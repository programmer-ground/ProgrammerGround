plugins {
    id 'org.springframework.boot' version '2.3.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.pg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    querydsl_version = '4.3.1'
    mapstruct_version = '1.4.2.Final'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compileOnly 'org.projectlombok:lombok'
    implementation "com.querydsl:querydsl-jpa:${querydsl_version}"
    implementation "com.querydsl:querydsl-mongodb:${querydsl_version}"
    implementation "com.querydsl:querydsl-apt:${querydsl_version}"
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"

    annotationProcessor(
            'org.projectlombok:lombok',
            'org.springframework.boot:spring-boot-configuration-processor',
            "com.querydsl:querydsl-apt:${querydsl_version}",
            "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    )

    testAnnotationProcessor(
            "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    )

    // development
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo")
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


}

test {
    useJUnitPlatform()
}


bootJar {
    layered()
}

// querydsl 적용
def querydslSrcDir = 'src/main/generated'

querydsl {
    jpa = true
    springDataMongo = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}